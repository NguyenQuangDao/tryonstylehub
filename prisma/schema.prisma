generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  type      String    @db.VarChar(50)
  imageUrl  String    @db.VarChar(1024)
  price     Float
  styleTags String    @db.Text  // Store as JSON string
  shopId    Int
  shop      Shop      @relation(fields: [shopId], references: [id])
  outfits   Outfit[]  @relation("OutfitProducts")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Shop {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  url       String     @db.VarChar(1024)
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Outfit {
  id        Int        @id @default(autoincrement())
  style     String     @db.Text
  imageUrl  String?    @db.VarChar(1024)
  products  Product[]  @relation("OutfitProducts")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique @db.VarChar(255)
  name      String     @db.VarChar(255)
  password  String     @db.VarChar(255)  // Hashed password
  avatar    String?    @db.VarChar(1024)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model TryOnHistory {
  id              Int      @id @default(autoincrement())
  userId          Int?
  modelImageUrl   String   @db.VarChar(1024)
  garmentImageUrl String   @db.VarChar(1024)
  resultImageUrl  String   @db.VarChar(1024)
  modelVersion    String   @db.VarChar(50)
  createdAt       DateTime @default(now())
}

model CostTracking {
  id          Int      @id @default(autoincrement())
  userId      Int?
  service     String   @db.VarChar(100)  // "openai", "fashn", "aws-s3"
  operation   String   @db.VarChar(100)  // "image-generation", "try-on", "upload"
  cost        Float
  details     String?  @db.Text  // JSON with additional details
  createdAt   DateTime @default(now())
}

